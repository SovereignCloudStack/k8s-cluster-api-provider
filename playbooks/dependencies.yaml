---
- name: Ensure k8s-cluster-api-provider project dependencies
  hosts: all
  vars:
    jq_version: "1.6"
    yq_version: "4.35.1"
    kubectl_version: "1.28.1"
    openstackclient_version: "6.2.0"
    octaviaclient_version: "3.4.0"
    opentofu_version: "1.6.0-alpha2"
    install_dir: "{{ ansible_user_dir }}/.local/bin"
  environment:
    PATH: "{{ install_dir }}:{{ ansible_env.PATH }}"
  roles:
  - role: ensure-pip  # https://zuul-ci.org/docs/zuul-jobs/latest/python-roles.html#role-ensure-pip
  tasks:
  - name: Make sure installation directory exists
    file:
      path: "{{ install_dir }}"
      state: directory
  - name: Install jq
    ansible.builtin.get_url:
      url: "https://github.com/jqlang/jq/releases/download/jq-{{ jq_version }}/jq-linux64"
      dest: "{{ install_dir }}/jq"
      mode: "+x"
      # TODO: use `checksum` attr here to verify the digest of the destination file, if available
  - name: Install yq
    ansible.builtin.get_url:
      url: "https://github.com/mikefarah/yq/releases/download/v{{ yq_version }}/yq_linux_amd64"
      dest: "{{ install_dir }}/yq"
      mode: "+x"
      # TODO: use `checksum` attr here to verify the digest of the destination file, if available
  - name: Install kubectl
    ansible.builtin.get_url:
      url: "https://dl.k8s.io/release/v{{ kubectl_version }}/bin/linux/amd64/kubectl"
      dest: "{{ install_dir }}/kubectl"
      mode: "+x"
      # TODO: use `checksum` attr here to verify the digest of the destination file, if available
  - name: Install openstack client dependencies
    ansible.builtin.pip:
      name:
      - "python-openstackclient=={{ openstackclient_version }}"
      - "python-octaviaclient=={{ octaviaclient_version }}"
      extra_args: --user
  - name: Install ip command
    ansible.builtin.package:
      name: iproute2
    become: true
  - name: Install OpenTofu
    # TODO: write separate role ensure-opentofu, see https://opendev.org/zuul/zuul-jobs/src/branch/master/roles/ensure-terraform
    block:
      - name: Check if unzip is installed
        command: "unzip -v"
        failed_when: false
        register: _unzip_probe
      - name: Install unzip
        when: _unzip_probe.rc != 0
        package:
          name: unzip
        become: true
      - name: Create temp directory
        tempfile:
          state: directory
        register: tofu_install_tempdir
      - name: Download OpenTofu archive
        get_url:
          url: "https://github.com/opentofu/opentofu/releases/download/v{{ opentofu_version }}/tofu_{{ opentofu_version }}_linux_amd64.zip"
          dest: "{{ tofu_install_tempdir.path }}/opentofu.zip"
      # TODO: checksum
      - name: Create OpenTofu package directory
        file:
          path: "{{ tofu_install_tempdir.path }}/opentofu"
          state: directory
      - name: Unarchive OpenTofu
        unarchive:
          src: "{{ tofu_install_tempdir.path }}/opentofu.zip"
          dest: "{{ tofu_install_tempdir.path }}/opentofu"
          remote_src: true
      - name: Install OpenTofu
        copy:
          src: "{{ tofu_install_tempdir.path }}/opentofu/tofu"
          dest: "{{ install_dir }}/tofu"
          mode: "+x"
          remote_src: true
      - name: Remove temp directory
        file:
          path: "{{ tofu_install_tempdir }}"
          state: absent
      - name: Output OpenTofu version
        command: "tofu version"
