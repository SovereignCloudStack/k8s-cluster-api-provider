# a working set for OpenStack
#
prefix               = "<prefix_for_openstack_resources>"  # defaults to "capi"
cloud_provider       = "<name_for_provider>"
availability_zone    = "<az>"
external             = "<external_network_name>"  # defaults to "" using auto-detection
dns_nameservers      = [ "DNS_IP1", "DNS_IP2" ]	  # defaults to [ "5.1.66.255", "185.150.99.255" ] (FF MUC)
kind_flavor          = "<flavor>"                 # defaults to SCS-2V-4  (larger does not hurt)
ssh_username         = "<username_for_ssh>"	  # defaults to "ubuntu"
clusterapi_version   = "<1.x.y>"		  # defaults to "1.3.8"
capi_openstack_version = "<0.x.y>"		  # defaults to "0.7.3"
image                = "<glance_image>"		  # defaults to "Ubuntu 22.04"
cilium_binaries      = "<v0.aa.bb;v0.xx.yy>"      # defaults to "v0.13.2;v0.11.6"
# Settings for testcluster
kubernetes_version   = "<v1.XX.XX>"		  # defaults to "v1.25.x"
kube_image_raw       = "<boolean>"      # defaults to "true"
calico_version       = "<v3.xx.y>"	# defaults to "v3.26.1"
controller_flavor    = "<flavor>"       # defaults to SCS-2V-4-20s (use etcd tweaks if you only have SCS-2V-4-20 in multi-controller setups)
worker_flavor        = "<flavor>"       # defaults to SCS-2V-4-20s  (larger helps)
controller_count     = <number>         # defaults to 1 (0 skips testcluster creation)
worker_count         = <number>	        # defaults to 3
kind_mtu             = <number>         # defaults to 0 (autodetection)
node_cidr            = "<CIDR>"         # defaults to "10.8.0.0/20"
service_cidr         = "<CIDR>"         # defaults to "10.96.0.0/12"
pod_cidr             = "<CIDR>"         # defaults to "192.168.0.0/16"
anti_affinity        = "<boolean>"      # defaults to "true"
use_cilium           = "version/true/false"       # defaults to "true", can also be set to "vx.y.z", also see cilium_binaries
use_ovn_lb_provider  = "auto/true/false"	  # use OVN LB if available (auto) or force (true) or never (false), not yet recommended
deploy_nginx_ingress = "version/true/false"       # defaults to "true", you can also set vX.Y.Z if you want
deploy_gateway_api   = "true/false"               # defaults to "false"
deploy_cert_manager  = "version/true/false"       # defaults to "false", you can also set to vX.Y.Z if you want
deploy_flux          = "version/true/false"       # defaults to "false", you can also set to vX.Y.Z if you want
deploy_metrics       = "<boolean>"      # defaults to "true"
deploy_occm          = "<version>"      # defaults to "true" (meaning matching k8s)
deploy_cindercsi     = "<version>"      # defaults to "true", dito
etcd_unsafe_fs       = "<boolean>"      # defaults to "false", dangerous
testcluster_name     = "NAME"           # defaults to "testcluster"
restrict_kubeapi     = [ "IP/20", "IP/22" ]	# defaults to empty (fully open), use [ "none" ] for exclusive internal access
containerd_registry_files = {"hosts":["<list of registry host config files>"], "certs":["<list of custom cert files>"]} # defaults to '{"hosts":["./files/containerd/docker.io"], "certs":[]}'
deploy_harbor        = "<boolean>"      # defaults to "false", "true" deploys Harbor and forces deployment of flux and potentially other services (`cert_manager`, `nginx_ingress` and `cindercsi`), see `doc/usage/harbor.md`
harbor_config        = {"domain_name":"<name>", "issuer_email":"<email>", "persistence":"<boolean>", "database_size":"size", "redis_size":"size", "trivy_size":"size"} # for defaults see ../variables.tf
