---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: cspo
    app.kubernetes.io/instance: system
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespace
    app.kubernetes.io/part-of: cspo
    control-plane: controller-manager
  name: cspo-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: openstackclusterstackreleases.infrastructure.clusterstack.x-k8s.io
spec:
  group: infrastructure.clusterstack.x-k8s.io
  names:
    kind: OpenStackClusterStackRelease
    listKind: OpenStackClusterStackReleaseList
    plural: openstackclusterstackreleases
    shortNames:
    - oscsr
    singular: openstackclusterstackrelease
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.ready
      name: Ready
      type: boolean
    - description: Time duration since creation of OpenStackClusterStackRelease
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].message
      name: Message
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: OpenStackClusterStackRelease is the Schema for the openstackclusterstackreleases
          API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: OpenStackClusterStackReleaseSpec defines the desired state
              of OpenStackClusterStackRelease.
            properties:
              identityRef:
                default:
                  kind: Secret
                  name: openstack
                description: IdentityRef is a reference to a identity to be used when
                  reconciling this cluster
                properties:
                  kind:
                    description: Kind of the identity. Must be supported by the infrastructure
                      provider and may be either cluster or namespace-scoped.
                    minLength: 1
                    type: string
                  name:
                    description: Name of the infrastructure identity to be used. Must
                      be either a cluster-scoped resource, or namespaced-scoped resource
                      the same namespace as the resource(s) being provisioned.
                    type: string
                required:
                - kind
                - name
                type: object
            type: object
          status:
            description: OpenStackClusterStackReleaseStatus defines the observed state
              of OpenStackClusterStackRelease.
            properties:
              conditions:
                description: Conditions defines current service state of the OpenStackClusterStackRelease.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              ready:
                default: false
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: openstackclusterstackreleasetemplates.infrastructure.clusterstack.x-k8s.io
spec:
  group: infrastructure.clusterstack.x-k8s.io
  names:
    kind: OpenStackClusterStackReleaseTemplate
    listKind: OpenStackClusterStackReleaseTemplateList
    plural: openstackclusterstackreleasetemplates
    shortNames:
    - oscsrt
    singular: openstackclusterstackreleasetemplate
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: OpenStackClusterStackReleaseTemplate is the Schema for the openstackclusterstackreleasetemplates
          API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: OpenStackClusterStackReleaseTemplateSpec defines the desired
              state of OpenStackClusterStackReleaseTemplate.
            properties:
              template:
                description: OpenStackClusterStackReleaseTemplateResource describes
                  the data needed to create a OpenStackClusterStackRelease from a
                  template.
                properties:
                  spec:
                    description: OpenStackClusterStackReleaseSpec defines the desired
                      state of OpenStackClusterStackRelease.
                    properties:
                      identityRef:
                        default:
                          kind: Secret
                          name: openstack
                        description: IdentityRef is a reference to a identity to be
                          used when reconciling this cluster
                        properties:
                          kind:
                            description: Kind of the identity. Must be supported by
                              the infrastructure provider and may be either cluster
                              or namespace-scoped.
                            minLength: 1
                            type: string
                          name:
                            description: Name of the infrastructure identity to be
                              used. Must be either a cluster-scoped resource, or namespaced-scoped
                              resource the same namespace as the resource(s) being
                              provisioned.
                            type: string
                        required:
                        - kind
                        - name
                        type: object
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
          status:
            description: OpenStackClusterStackReleaseTemplateStatus defines the observed
              state of OpenStackClusterStackReleaseTemplate.
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: openstacknodeimagereleases.infrastructure.clusterstack.x-k8s.io
spec:
  group: infrastructure.clusterstack.x-k8s.io
  names:
    kind: OpenStackNodeImageRelease
    listKind: OpenStackNodeImageReleaseList
    plural: openstacknodeimagereleases
    shortNames:
    - osnir
    singular: openstacknodeimagerelease
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.ready
      name: Ready
      type: boolean
    - description: Time duration since creation of OpenStackNodeImageRelease
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].message
      name: Message
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: OpenStackNodeImageRelease is the Schema for the openstacknodeimagereleases
          API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: OpenStackNodeImageReleaseSpec defines the desired state of
              OpenStackNodeImageRelease.
            properties:
              identityRef:
                description: IdentityRef is a reference to a identity to be used when
                  reconciling this cluster
                properties:
                  kind:
                    description: Kind of the identity. Must be supported by the infrastructure
                      provider and may be either cluster or namespace-scoped.
                    minLength: 1
                    type: string
                  name:
                    description: Name of the infrastructure identity to be used. Must
                      be either a cluster-scoped resource, or namespaced-scoped resource
                      the same namespace as the resource(s) being provisioned.
                    type: string
                required:
                - kind
                - name
                type: object
              image:
                description: Image represents options used to upload an image
                properties:
                  createOpts:
                    description: CreateOpts represents options used to create an image.
                    properties:
                      container_format:
                        description: ContainerFormat is the format of the container.
                          Valid values are ami, ari, aki, bare, and ovf.
                        type: string
                      disk_format:
                        description: DiskFormat is the format of the disk. If set,
                          valid values are ami, ari, aki, vhd, vmdk, raw, qcow2, vdi,
                          and iso.
                        type: string
                      id:
                        description: Id is the the image ID.
                        type: string
                      min_disk:
                        description: MinDisk is the amount of disk space in GB that
                          is required to boot the image.
                        type: integer
                      min_ram:
                        description: MinRAM is the amount of RAM in MB that is required
                          to boot the image.
                        type: integer
                      name:
                        description: Name is the name of the new image.
                        type: string
                      os_hidden:
                        description: Hidden is whether the image is listed in default
                          image list or not.
                        type: boolean
                      protected:
                        description: protected is whether the image is not deletable.
                        type: boolean
                      tags:
                        description: Tags is a set of image tags.
                        items:
                          type: string
                        type: array
                      visibility:
                        description: Visibility defines who can see/use the image.
                        type: string
                    required:
                    - name
                    type: object
                  url:
                    type: string
                required:
                - createOpts
                - url
                type: object
            required:
            - identityRef
            - image
            type: object
          status:
            description: OpenStackNodeImageReleaseStatus defines the observed state
              of OpenStackNodeImageRelease.
            properties:
              conditions:
                description: Conditions defines current service state of the OpenStackNodeImageRelease.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              ready:
                default: false
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: cspo
    app.kubernetes.io/instance: controller-manager-sa
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: serviceaccount
    app.kubernetes.io/part-of: cspo
  name: cspo-controller-manager
  namespace: cspo-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: cspo
    app.kubernetes.io/instance: leader-election-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: role
    app.kubernetes.io/part-of: cspo
  name: cspo-leader-election-role
  namespace: cspo-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cspo-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - update
  - watch
- apiGroups:
  - infrastructure.clusterstack.x-k8s.io
  resources:
  - openstackclusterstackreleases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.clusterstack.x-k8s.io
  resources:
  - openstackclusterstackreleases/finalizers
  verbs:
  - update
- apiGroups:
  - infrastructure.clusterstack.x-k8s.io
  resources:
  - openstackclusterstackreleases/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - infrastructure.clusterstack.x-k8s.io
  resources:
  - openstacknodeimagereleases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.clusterstack.x-k8s.io
  resources:
  - openstacknodeimagereleases/finalizers
  verbs:
  - update
- apiGroups:
  - infrastructure.clusterstack.x-k8s.io
  resources:
  - openstacknodeimagereleases/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: cspo
    app.kubernetes.io/instance: metrics-reader
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: cspo
  name: cspo-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: cspo
    app.kubernetes.io/instance: proxy-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: cspo
  name: cspo-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: cspo
    app.kubernetes.io/instance: leader-election-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: rolebinding
    app.kubernetes.io/part-of: cspo
  name: cspo-leader-election-rolebinding
  namespace: cspo-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cspo-leader-election-role
subjects:
- kind: ServiceAccount
  name: cspo-controller-manager
  namespace: cspo-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: cspo
    app.kubernetes.io/instance: manager-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: cspo
  name: cspo-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cspo-manager-role
subjects:
- kind: ServiceAccount
  name: cspo-controller-manager
  namespace: cspo-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: cspo
    app.kubernetes.io/instance: proxy-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: cspo
  name: cspo-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cspo-proxy-role
subjects:
- kind: ServiceAccount
  name: cspo-controller-manager
  namespace: cspo-system
---
apiVersion: v1
kind: Secret
metadata:
  name: cspo-cluster-stack-variables
  namespace: cspo-system
stringData:
  git-org-name: SovereignCloudStack
  git-provider: github
  git-repo-name: cluster-stacks
  git-access-token: "${GIT_ACCESS_TOKEN}"
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: cspo
    app.kubernetes.io/instance: controller-manager-metrics-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: cspo
    control-plane: controller-manager
  name: cspo-controller-manager-metrics-service
  namespace: cspo-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: cspo
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: deployment
    app.kubernetes.io/part-of: cspo
    control-plane: controller-manager
  name: cspo-controller-manager
  namespace: cspo-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        env:
        - name: GIT_PROVIDER
          valueFrom:
            secretKeyRef:
              key: git-provider
              name: cspo-cluster-stack-variables
        - name: GIT_ORG_NAME
          valueFrom:
            secretKeyRef:
              key: git-org-name
              name: cspo-cluster-stack-variables
        - name: GIT_REPOSITORY_NAME
          valueFrom:
            secretKeyRef:
              key: git-repo-name
              name: cspo-cluster-stack-variables
        - name: GIT_ACCESS_TOKEN
          valueFrom:
            secretKeyRef:
              key: git-access-token
              name: cspo-cluster-stack-variables
        image: ghcr.io/sovereigncloudstack/cspo:v0.1.0-alpha.2
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.15.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      serviceAccountName: cspo-controller-manager
      terminationGracePeriodSeconds: 10
