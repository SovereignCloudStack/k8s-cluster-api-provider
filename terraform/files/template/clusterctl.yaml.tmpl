# This is the settings file to configure clusters with clusterctl
# Secrets (the b64 encoded data at the end) are filled in using clusterctl_template.sh.
# How to use:
# * Create a copy of this file in clusterctl-CLUSTER_NAME.yaml and adjust it.
# * ./create_cluster.sh CLUSTER_NAME
#   This will copy it to ~/.cluster-api/clusterctl.yaml and use
#   clusterctl generate cluster $CLUSTER_NAME --from cluster-template.yaml
#   to generate $CLUSTER_NAME-config.yaml
#
# (c) Thorsten Schifferdecker, 2020, Malte MÃ¼nch, 2021, Kurt Garloff, 2021
# SPDX-License-Identifier: EPL-2.0

# Kubernetes version
KUBERNETES_VERSION: ${kubernetes_version}
OPENSTACK_IMAGE_NAME: ubuntu-capi-image-${kubernetes_version}
# Specify version (git branch name) of openstack ccm and cindercsi
# true means using the recommended version for this k8s version
DEPLOY_OCCM: ${deploy_occm}
DEPLOY_CINDERCSI: ${deploy_cindercsi}

# cilium
USE_CILIUM: ${use_cilium}
# deploy nginx ingress controller
DEPLOY_NGINX_INGRESS: ${deploy_nginx_ingress}
# Use PROXY protocol to get real IPs
NGINX_INGRESS_PROXY: false
# deploy cert-manager
DEPLOY_CERT_MANAGER: ${deploy_cert_manager}
# deploy flux2
DEPLOY_FLUX: ${deploy_flux}
# deploy metrics service
DEPLOY_METRICS: ${deploy_metrics}

# OpenStack flavors and machine count
OPENSTACK_CONTROL_PLANE_MACHINE_FLAVOR: ${controller_flavor}
CONTROL_PLANE_MACHINE_COUNT: ${controller_count}
# Increase generation counter when changing flavor or k8s version or other MD settings
CONTROL_PLANE_MACHINE_GEN: genc01

OPENSTACK_NODE_MACHINE_FLAVOR: ${worker_flavor}
WORKER_MACHINE_COUNT: ${worker_count}
# Increase generation counter when changing flavor or k8s version or other MD settings
WORKER_MACHINE_GEN: genw01

# Openstack Availablity Zone
OPENSTACK_FAILURE_DOMAIN: ${availability_zone}

ETCD_UNSAFE_FS: ${etcd_unsafe_fs}

# Nodes CIDR
NODE_CIDR: ${node_cidr}

# Set MTU for k8s CNI network (50 smaller than cloud, 0 = auto)
MTU_VALUE: 0

# Openstack external Network ID
# hint: openstack network list --external -f value -c ID
OPENSTACK_EXTERNAL_NETWORK_ID: ${external}

OPENSTACK_DNS_NAMESERVERS: "[ %{ for dnsip in dns_nameservers ~} ${dnsip}, %{ endfor ~} ]"

OPENSTACK_SSH_KEY_NAME: ${prefix}-keypair

OPENSTACK_CONTROL_PLANE_IP: 127.0.0.1

# Use anti-affinity server groups (not working yet)
OPENSTACK_ANTI_AFFINITY: ${anti_affinity}
OPENSTACK_SRVGRP_CONTROLLER: nonono
OPENSTACK_SRVGRP_WORKER: nonono

# OpenStack image handling
OPENSTACK_IMAGE_RAW: ${kube_image_raw}
OPENSTACK_IMAGE_REGISTRATION_EXTRA_FLAGS: ${image_registration_extra_flags}

# the section used at clouds.yaml
OPENSTACK_CLOUD: ${cloud_provider}

# the clouds.yaml
# Note: current OCCM needs project_id to be included
#  (unlike the openstack client tools)
# hint: $(base64 -w0 < .config/openstack/clouds.yaml )
OPENSTACK_CLOUD_YAML_B64:

# the cloud provider config
# hint: base64 -w0 < cloud.conf
OPENSTACK_CLOUD_PROVIDER_CONF_B64:

# The Certificate Authority (CA) used for Openstack API endpoints. We use
# "let's encrypt" https://letsencrypt.org/certs/letsencryptauthorityx3.pem.txt
# hint: base64 -w0 < cacert.pam
OPENSTACK_CLOUD_CACERT_B64:


