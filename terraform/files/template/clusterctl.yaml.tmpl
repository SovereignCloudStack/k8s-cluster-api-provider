# cluster-api template for provider openstack
#
# use-case: single Kubernetes controlplane and 1 worker node
# 

# Kubernetes version
KUBERNETES_VERSION: ${kubernetes_version}

# Openstack Availablity Zone
OPENSTACK_FAILURE_DOMAIN: ${availability_zone}

# Openstack external Network ID
# hint: openstack network list -c ID
#
OPENSTACK_EXTERNAL_NETWORK_ID: ${external}

OPENSTACK_KEYPAIR_NAME: capi-keypair
OPENSTACK_IMAGE_NAME: ${image}

OPENSTACK_CONTROL_PLANE_MACHINE_FLAVOR: ${flavor}
OPENSTACK_CONTROLPLANE_IP: 127.0.0.1
CONTROL_PLANE_MACHINE_COUNT: 1

OPENSTACK_NODE_MACHINE_FLAVOR: ${flavor}
WORKER_MACHINE_COUNT: 1

# the section used at clouds.yaml
OPENSTACK_CLOUD: ${cloud_provider}

# the clouds.yaml
# hint: $(base64 -w0 < clouds.yaml )
#
OPENSTACK_CLOUD_YAML_B64: LS0tCmNsb3VkczoKIGd4LXNjcy1zdGFnaW5nOgogIGF1dGg6CiAgIGF1dGhfdXJsOiBodHRwczovL2d4LXNjcy5va2Vhbm9zLmRldjo1MDAwL3YzCiAgIHVzZXJuYW1lOiBhZG1pbkBzY3MtZ2FyZGVuZXIKICAgcGFzc3dvcmQ6IFlXVmtPVEl3WWpZMVlUQTEKICAgcHJvamVjdF9uYW1lOiBzY3MtZ2FyZGVuZXItdGVzdGJlZC1zdGFnaW5nCiAgIHVzZXJfZG9tYWluX25hbWU6IHNjcy1nYXJkZW5lcgogICBwcm9qZWN0X2RvbWFpbl9uYW1lOiBzY3MtZ2FyZGVuZXIKICByZWdpb25fbmFtZTogIlJlZ2lvbk9uZSIKICBpbnRlcmZhY2U6ICJwdWJsaWMiCiAgaWRlbnRpdHlfYXBpX3ZlcnNpb246IDMKICBpbWFnZV9hcGlfdmVyc2lvbjogMgo=

# the cloud provider config
# hint: base64 -w0 < cloud.conf
#
OPENSTACK_CLOUD_PROVIDER_CONF_B64: W0dsb2JhbF0KYXV0aC11cmw9Imh0dHBzOi8vZ3gtc2NzLm9rZWFub3MuZGV2OjUwMDAiCnRlbmFudC1uYW1lPSJzY3MtZ2FyZGVuZXItdGVzdGJlZC1zdGFnaW5nIgpkb21haW4tbmFtZT0ic2NzLWdhcmRlbmVyIgpwYXNzd29yZD0iWVdWa09USXdZalkxWVRBMSIKdXNlcm5hbWU9ImFkbWluQHNjcy1nYXJkZW5lciIKCltMb2FkQmFsYW5jZXJdCm1hbmFnZS1zZWN1cml0eS1ncm91cHM9dHJ1ZQp1c2Utb2N0YXZpYT10cnVlCg==

# the Certificate Authority (CA) used for Openstack API endpoints
# the "let's encrypt" is used https://letsencrypt.org/certs/letsencryptauthorityx3.pem.txt
# hint: base64 -w0 < cacert.pam
#
OPENSTACK_CLOUD_CACERT_B64: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlGRmpDQ0F2NmdBd0lCQWdJUkFKRXJDRXJQREJpblUvYldMaVduWDFvd0RRWUpLb1pJaHZjTkFRRUxCUUF3DQpUekVMTUFrR0ExVUVCaE1DVlZNeEtUQW5CZ05WQkFvVElFbHVkR1Z5Ym1WMElGTmxZM1Z5YVhSNUlGSmxjMlZoDQpjbU5vSUVkeWIzVndNUlV3RXdZRFZRUURFd3hKVTFKSElGSnZiM1FnV0RFd0hoY05NakF3T1RBME1EQXdNREF3DQpXaGNOTWpVd09URTFNVFl3TURBd1dqQXlNUXN3Q1FZRFZRUUdFd0pWVXpFV01CUUdBMVVFQ2hNTlRHVjBKM01nDQpSVzVqY25sd2RERUxNQWtHQTFVRUF4TUNVak13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLDQpBb0lCQVFDN0FoVW96UGFnbE5NUEV1eU5WWkxEK0lMeG1hWjZRb2luWFNhcXRTdTV4VXl4cjQ1citYWElvOWNQDQpSNVFVVlRWWGpKNm9vamtaOVlJOFFxbE9idlU3d3k3YmpjQ3dYUE5aT09mdHoybndXZ3NidnNDVUpDV0gramR4DQpzeFBuSEt6aG0rL2I1RHRGVWtXV3FjRlR6alRJVXU2MXJ1MlAzbUJ3NHFWVXE3WnREcGVsUURScks5TzhadXRtDQpOSHo2YTR1UFZ5bVorREFYWGJweWIvdUJ4YTNTaGxnOUY4Zm5DYnZ4Sy9lRzNNSGFjVjNVUnVQTXJTWEJpTHhnDQpaM1Ztcy9FWTk2SmM1bFAvT29pMlI2WC9FeGpxbUFsM1A1MVQrYzhCNWZXbWNCY1VyMk9rLzVtems1M2NVNmNHDQova2lGSGFGcHJpVjF1eFBNVWdQMTdWR2hpOXNWQWdNQkFBR2pnZ0VJTUlJQkJEQU9CZ05WSFE4QkFmOEVCQU1DDQpBWVl3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdJR0NDc0dBUVVGQndNQk1CSUdBMVVkRXdFQi93UUlNQVlCDQpBZjhDQVFBd0hRWURWUjBPQkJZRUZCUXVzeGUzV0ZiTHJsQUpRT1lmcjUyTEZNTEdNQjhHQTFVZEl3UVlNQmFBDQpGSG0wV2VaN3R1WGtBWE9BQ0lqSUdsajI2WnR1TURJR0NDc0dBUVVGQndFQkJDWXdKREFpQmdnckJnRUZCUWN3DQpBb1lXYUhSMGNEb3ZMM2d4TG1rdWJHVnVZM0l1YjNKbkx6QW5CZ05WSFI4RUlEQWVNQnlnR3FBWWhoWm9kSFJ3DQpPaTh2ZURFdVl5NXNaVzVqY2k1dmNtY3ZNQ0lHQTFVZElBUWJNQmt3Q0FZR1o0RU1BUUlCTUEwR0N5c0dBUVFCDQpndDhUQVFFQk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQ0FRQ0Z5azVIUHFQM2hVU0Z2TlZuZUxLWVk2MTFUUjZXDQpQVE5sY2xRdGdhRHF3KzM0SUw5ZnpMZHdBTGR1Ty9aZWxON2tJSittNzR1eUErZWl0Ulk4a2M2MDdUa0M1M3dsDQppa2ZtWlc0L1J2VFo4TTZVSys1VXpoSzhqQ2RMdU1HWUw2S3Z6WEdSU2dpM3lMZ2pld1F0Q1BrSVZ6NkQyUVF6DQpDa2NoZUFtQ0o4TXF5SnU1emx6eVpNakF2bm5BVDQ1dFJBeGVrcnN1OTRzUTRlZ2RSQ25iV1NEdFk3a2grQkltDQpsSk5Yb0IxbEJNRUtJcTRRRFVPWG9SZ2ZmdURnaGplMVdyRzlNTCtIYmlzcS95Rk9Hd1hEOVJpWDhGNnN3Nlc0DQphdkF1dkRzenVlNUwzc3o4NUsrRUM0WS93RlZETnZabzRUWVhhbzZaMGYrbFFLYzB0OERRWXprMU9YVnU4cnAyDQp5Sk1DNmFsTGJCZk9EQUxadllIN243ZG8xQVpsczRJOWQxUDRqbmtEclFveEIzVXFROWhWbDNMRUtRNzN4RjFPDQp5SzVHaEREWDhvVmZHS0Y1dStkZWNJc0g0WWFUdzdtUDNHRnhKU3F2MyswbFVGSm9pNUxjNWRhMTQ5cDkwSWRzDQpoQ0V4cm9MMSs3bXJ5SWtYUGVGTTVUZ085cjBydlphQkZPdlYyejBncDM1WjArTDRXUGxidUVqTi9seFBGaW4rDQpIbFVqcjhnUnNJM3FmSk9RRnkvOXJLSUpSMFkvOE9td3QvOG9UV2d5MW1kZUhtbWprN2oxbllzdkM5SlNRNlp2DQpNbGRsVFRLQjN6aFRoVjErWFdZcDZyamQ1SlcxemJWV0VrTE54RTdHSlRoRVVHM3N6Z0JWR1A3cFNXVFVUc3FYDQpuTFJid0hPb3E3aEh3Zz09DQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tDQo=
