#!/usr/bin/env bash

KUBERNETES_VERSION="${kubernetes_version}"
VERSION_CAPI_IMAGE=$(echo $KUBERNETES_VERSION | sed 's/\.[[:digit:]]*$//g')
PROVIDER="${provider}"


#install Openstack CLI
sudo apt install -y python3-openstackclient

#download/upload image to openstack
CAPIIMG=$(openstack --os-cloud $PROVIDER image list --name ubuntu-capi-image-$KUBERNETES_VERSION)
if test -z "$CAPIIMG"; then
  # TODO: Check signature
  wget https://images.osism.tech/openstack-k8s-capi-images/ubuntu-2004-kube-$VERSION_CAPI_IMAGE/ubuntu-2004-kube-$KUBERNETES_VERSION.qcow2
  FMT=qcow2
  if test "${kube_image_raw}" = "true"; then
    FMT=raw
    qemu-img convert ubuntu-2004-kube-$KUBERNETES_VERSION.qcow2 -O raw -S 4k ubuntu-2004-kube-$KUBERNETES_VERSION.raw && rm ubuntu-2004-kube-$KUBERNETES_VERSION.qcow2
  fi
  #TODO min-disk, min-ram, other std. image metadata
  openstack --os-cloud $PROVIDER image create --disk-format $FMT --file ubuntu-2004-kube-$KUBERNETES_VERSION.$FMT ubuntu-capi-image-$KUBERNETES_VERSION &
  sleep 5
  echo "Waiting for image ubuntu-capi-image-$KUBERNETES_VERSION: "
  let -i ctr=0
  while test $ctr -lt 60; do
    CAPIIMG=$(openstack --os-cloud $PROVIDER image list --name ubuntu-capi-image-$KUBERNETES_VERSION -f value -c ID -c Status)
    STATUS="$${CAPIIMG##* }"
    if test "$STATUS" = "saving" -o "$STATUS" = "active"; then break; fi
    echo -n "."
    let ctr+=1
    sleep 10
  done
  echo " $CAPIIMG"
  if test $ctr -ge 60; then
    echo "ERROR: Image ubuntu-capi-image-$KUBERNETES_VERSION not found" 1>&2
    exit 2
  fi
fi
